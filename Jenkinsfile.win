/*
* Copyright © 2010 - 2013 Apama Ltd.
* Copyright © 2013 - 2018 Software AG, Darmstadt, Germany and/or its licensors
*
* SPDX-License-Identifier: Apache-2.0
*
*   Licensed under the Apache License, Version 2.0 (the "License");
*   you may not use this file except in compliance with the License.
*   You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
*   Unless required by applicable law or agreed to in writing, software
*   distributed under the License is distributed on an "AS IS" BASIS,
*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*   See the License for the specific language governing permissions and
*   limitations under the License.                                                            
*
*/

pipeline {
    agent any

    parameters {
        string(name: 'PACKAGE_NAME', defaultValue: 'MyPackage', description: 'Enter the package name to deploy')
    }

    environment {
        SAG_HOME = 'C:/SoftwareAG7'
        SAG_CI_HOME = 'C:/SAG_CI_DEV'
        GIT_REPO = 'https://github.com/ixsuryaprakash/webmethods-sample-project-layout.git'
        IS_PACKAGES_DIR = "${SAG_HOME}/IntegrationServer/packages"
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    if (isUnix()) {
                        sh "rm -rf workspace && git clone ${env.GIT_REPO} workspace"
                    } else {
                        bat "rmdir /s /q workspace && git clone %GIT_REPO% workspace"
                    }
                }
            }
        }

        stage('Build Selected Package') {
            steps {
                script {
                    def packagePath = "workspace/assets/IS/Packages/${params.PACKAGE_NAME}"
                    if (!fileExists(packagePath)) {
                        error "Package ${params.PACKAGE_NAME} does not exist in repository!"
                    }
                }
                bat "${env.SAG_HOME}/common/lib/ant/bin/ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${params.PACKAGE_NAME} build"
            }
        }

        stage('Deploy Selected Package') {
            steps {
                script {
                    def sourcePackagePath = "workspace/assets/IS/Packages/${params.PACKAGE_NAME}"
                    def targetPackagePath = "${env.IS_PACKAGES_DIR}/${params.PACKAGE_NAME}"

                    bat "xcopy /E /I /Y ${sourcePackagePath} ${targetPackagePath}"
                }
            }
        }

        stage('Restart Integration Server (Optional)') {
            steps {
                script {
                    // Uncomment if restarting IS is needed
                    // bat "${SAG_HOME}/IntegrationServer/bin/server.bat -restart"
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    echo "Package ${params.PACKAGE_NAME} has been deployed to ${env.IS_PACKAGES_DIR}"
                }
            }
        }
    }
}

