parameterized build Jenkins


pipeline{
    agent any
     environment {
        SAG_HOME = 'C:/SoftwareAG7'
        SAG_CI_HOME = 'C:/SAG_CI_DEV'
        packages_names_list = "${PACKAGE_NAMES}"
     }
    parameters {
    string(name: 'PACKAGE_NAME', defaultValue: 'PackageA.zip', description: 'Select the package')
    }
    stages{
        stage('Verifying Packages'){
            steps{
                script{
                    if(packages_names_list=="*"){
                    //bat """move project_all.properties project.properties"""
                    stage("Building Packages"){
                        bat "${env.SAG_HOME}/common/lib/ant/bin/ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${env.JOB_NAME} -buildfile build_IS.xml build"
                    }
                    stage("Deploying Packages"){
                        bat "${env.SAG_HOME}/common/lib/ant/bin/ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${env.JOB_NAME} -buildfile build_IS.xml deploy"
                    }
                } else{
                    if (fileExists("assets/IS/Packages/Packages_To_Deploy")){
                        bat """ cd assets/IS/Packages
                        rmdir /s Packages_To_Deploy /Q """
                    }
                    bat """
                    //move project_specific.properties project.properties
                    cd assets/IS/Packages
                    mkdir Packages_To_Deploy
                    cd ../../../
                    """
                    for(item in packages_names_list.split(',')){
                        if(item=="IXAdminFramework" || item=="DOECommon"){
                            bat """ move /y "assets\\IS\\Packages\\$item" "assets\\IS\\Packages\\Packages_To_Deploy\\$item" """
                        }
                        else{
                            bat """ xcopy assets\\IS\\Packages\\$item assets\\IS\\Packages\\Packages_To_Deploy\\$item  /e /i """
                        }
                        
                    }
                    stage("Building Packages"){
                        bat "${env.SAG_HOME}/common/lib/ant/bin/ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${env.JOB_NAME} -buildfile build_IS.xml build"
                    }
                    stage("Deploying Packages"){
                        bat "${env.SAG_HOME}/common/lib/ant/bin/ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${env.JOB_NAME} -buildfile build_IS.xml deploy"
                    }
                    bat """ cd assets/IS/Packages
                        rmdir /s Packages_To_Deploy /Q """
                }
                
            }
        }
    }
  }
}
